<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = game_state.typing; // default game state
reset = false; // reset values after firing
rounds = 0;
wins = false;

firingCountdown = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firingCountdown--;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Start firing
if(state == game_state.firing &amp;&amp; !wins) {
    obj_player.onFire = true;
    obj_enemy.onFire = true;
    
    if(alarm[0] &lt; 0) alarm[0] = room_speed;
}

// Switch to typing and continue
if(firingCountdown &lt; 1 &amp;&amp; !wins) {
    state = game_state.typing;
    firingCountdown = 5;
    rounds++;
    
    if(position_meeting(obj_player.x, obj_player.y, obj_water)) {
        wins = true;
        instance_create(room_width / 2, room_height / 2, obj_lose);
        //show_message("Enemy wins!");
    } else if (position_meeting(obj_enemy.x, obj_enemy.y, obj_water)) {
        wins = true;
        instance_create(room_width / 2, room_height / 2, obj_win);
        //show_message("You win!");
    }  else {
        // continue
        scr_reset();
    }
}


/*
    if(obj_player.hp &lt; 1 || obj_enemy.hp &lt; 1) {
        // full reset
        if(obj_player.hp &lt; 1) {
            show_message("Enemy Wins!");
        } else {
            show_message("You win!");
        }
        
        obj_player.hp = scr_apply_option("hp", global.hp);
        obj_enemy.hp = scr_apply_option("hp", global.hp);
        scr_reset();
        
    } else {
        // continue
        scr_reset();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(64, 64, string(obj_player.hp));
//draw_text(room_width-64, 64, string(obj_enemy.hp));
/*
draw_text(64, 16, "FPS: " + string(fps));
draw_text(64, 96, "P Floor: " + string(obj_p_floor.y));
draw_text(64, 128, "E Floor: " + string(obj_e_floor.y));
draw_text(64, 160, "Floor Diff: " + string(floor(abs(obj_player.y - obj_enemy.y))));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
