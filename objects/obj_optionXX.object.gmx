<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>options[0, 0] = "AI Difficulty";
options[0, 1] = 0; // 0 - Easy; 1 - Average; 2 - Hard

options[1, 0] = "Scrabble Scoring";
options[1, 1] = 0; // 0 - Off; 1 - On

options[2, 0] = "Score Multiply";
options[2, 1] = 0; // 0 - Off; 1 - On

options[3, 0] = "Hit Points"; // For left-over game mode
options[3, 1] = 200;

options[4, 0] = "Rounds"; // For drop and loot game mode
options[4, 1] = 10;

options[5, 0] = "Score Goal"; // For blitz game mode
options[5, 1] = 500;

options[6, 0] = "Back";

/*
options[6, 0] = "Category";
options[6, 1] = 
*/

padding = 64;
mpos = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var move = 0;
move -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord("W")), 0);
move += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord("S")), 0);

if(move != 0) {
    mpos += move;
    if(mpos &lt; 0) mpos = array_height_2d(options) - 1;
    if(mpos &gt; array_height_2d(options) - 1) mpos = 0;
}

var push;
push = max(keyboard_check_released(vk_enter), keyboard_check_released(vk_space), 0);

if(push) scr_options();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(f_reg);
draw_set_color(c_black);

for (var m = array_height_2d(options) - 1; m &gt; -1; m--) {
    
    draw_text(x + padding, y + (m * padding), string(options[m, 0]));
        
    if(m == mpos + 1) draw_set_color(c_white);
    else draw_set_color(c_black);
}

/*
for(var m = array_height_2d(options) - 1; m &gt; -1; m--) {
    for(var n = array_length_2d(options, m) - 1; n &gt; -1; n--) {
        draw_text(x + padding, y + (m * padding), string(options[m, 0]));
    }
}*/

draw_sprite(sprite_index, 0, x + 16, y + (mpos * padding));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
